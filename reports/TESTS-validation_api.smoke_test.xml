<testsuite name="validation_api.smoke_test.Smoke tests for Validation APIs" tests="3" errors="0" failures="0" skipped="2" time="0.799685" timestamp="2022-07-19T09:59:20.008938" hostname="MacBook-Pro.local"><testcase classname="validation_api.smoke_test.Smoke tests for Validation APIs" name="Able to search validation schema rule with no payload field with B2B -- @1.1 " status="skipped" time="0"><skipped /><system-out>
<![CDATA[
@scenario.begin

  @validation_api @smoke @search @test1
  Scenario Outline: Able to search validation schema rule with no payload field with B2B -- @1.1 
    Given call Login API with partner username as "B2B_Partner" and password as "B2B_Partner_P4ssw0rd" ... skipped in 0.000s
    When call Search Schema API to search schema "create_transfer" with following payload ... skipped in 0.000s
      """
      {
        "partner": "B2B_Partner"
      }
      """
    Then the response status code will be "200" ... skipped in 0.000s
    And the response data will be ... skipped in 0.000s
      """
      {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "required": [
          "source",
          "destination",
          "compliance"
        ],
        "properties": {
          "source": {
            "$ref": "#/$defs/source"
          },
          "destination": {
            "$ref": "#/$defs/destination"
          },
          "compliance": {
            "$ref": "#/$defs/compliance"
          },
          "source_amount": {
            "$ref": "#/$defs/source_amount"
          },
          "destination_amount": {
            "$ref": "#/$defs/destination_amount"
          }
        },
        "allOf": [
          {
            "anyOf": [
              {
                "required": [
                  "source_amount"
                ],
                "not": {
                  "required": [
                    "destination_amount"
                  ]
                }
              },
              {
                "required": [
                  "destination_amount"
                ],
                "not": {
                  "required": [
                    "source_amount"
                  ]
                }
              }
            ]
          }
        ],
        "$defs": {
          "source": {
            "type": "object",
            "required": [
              "sender_id",
              "segment"
            ],
            "dependentRequired": {
              "id_number": [
                "id_type"
              ]
            },
            "properties": {
              "sender_id": {
                "$ref": "#/$defs/sender_id"
              },
              "segment": {
                "$ref": "#/$defs/source_segment"
              },
              "legal_name_first": {
                "$ref": "#/$defs/source_legal_name_first"
              },
              "legal_name_last": {
                "$ref": "#/$defs/source_legal_name_last"
              },
              "company_name": {
                "$ref": "#/$defs/source_company_name"
              },
              "date_of_birth": {
                "$ref": "#/$defs/source_date_of_birth"
              },
              "id_type": {
                "$ref": "#/$defs/source_id_type"
              },
              "id_number": {
                "$ref": "#/$defs/source_id_number"
              }
            },
            "allOf": [
              {
                "type": "object",
                "required": [
                  "legal_name_first",
                  "legal_name_last"
                ]
              }
            ]
          },
          "destination": {
            "type": "object",
            "required": [
              "country"
            ],
            "properties": {
              "country": {
                "$ref": "#/$defs/destination_country"
              },
              "partner": {
                "$ref": "#/$defs/destination_partner"
              }
            }
          },
          "compliance": {
            "type": "object",
            "required": [
              "source_of_funds"
            ],
            "properties": {
              "source_of_funds": {
                "$ref": "#/$defs/source_of_funds"
              }
            }
          },
          "source_amount": {
            "type": "object",
            "required": [
              "units",
              "currency"
            ],
            "properties": {
              "units": {
                "$ref": "#/$defs/source_units"
              },
              "currency": {
                "$ref": "#/$defs/source_currency"
              }
            }
          },
          "destination_amount": {
            "type": "object",
            "properties": {
              "units": {
                "$ref": "#/$defs/destination_units"
              }
            }
          },
          "destination_units": {
            "type": "string",
            "pattern": "^[+-]?\\d*(([,.]\\d{3})+)?([,.]\\d+)?([eE][+-]?\\d+)?$"
          },
          "source_units": {
            "type": "string",
            "pattern": "^[+-]?\\d*(([,.]\\d{3})+)?([,.]\\d+)?([eE][+-]?\\d+)?$"
          },
          "source_currency": {
            "type": "string"
          },
          "source_of_funds": {
            "type": "string"
          },
          "destination_country": {
            "type": "string"
          },
          "destination_partner": {
            "type": "string"
          },
          "sender_id": {
            "type": "string"
          },
          "source_segment": {
            "type": "string",
            "enum": [
              "individual",
              "business"
            ]
          },
          "source_legal_name_first": {
            "type": "string"
          },
          "source_legal_name_last": {
            "type": "string"
          },
          "source_company_name": {
            "type": "string"
          },
          "source_date_of_birth": {
            "type": "string",
            "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})$"
          },
          "source_id_type": {
            "type": "string",
            "enum": [
              "national",
              "passport"
            ]
          },
          "source_id_number": {
            "type": "string"
          }
        }
      }
      """

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="validation_api.smoke_test.Smoke tests for Validation APIs" name="Able to search validation schema rule with no payload field with C2C -- @1.2 " status="skipped" time="0"><skipped /><system-out>
<![CDATA[
@scenario.begin

  @validation_api @smoke @search @test1
  Scenario Outline: Able to search validation schema rule with no payload field with C2C -- @1.2 
    Given call Login API with partner username as "C2C_Partner" and password as "C2C_Partner_P4ssw0rd" ... skipped in 0.000s
    When call Search Schema API to search schema "create_transfer" with following payload ... skipped in 0.000s
      """
      {
        "partner": "C2C_Partner"
      }
      """
    Then the response status code will be "200" ... skipped in 0.000s
    And the response data will be ... skipped in 0.000s
      """
      {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "required": [
          "source",
          "destination",
          "compliance"
        ],
        "properties": {
          "source": {
            "$ref": "#/$defs/source"
          },
          "destination": {
            "$ref": "#/$defs/destination"
          },
          "compliance": {
            "$ref": "#/$defs/compliance"
          },
          "source_amount": {
            "$ref": "#/$defs/source_amount"
          },
          "destination_amount": {
            "$ref": "#/$defs/destination_amount"
          }
        },
        "allOf": [
          {
            "anyOf": [
              {
                "required": [
                  "source_amount"
                ],
                "not": {
                  "required": [
                    "destination_amount"
                  ]
                }
              },
              {
                "required": [
                  "destination_amount"
                ],
                "not": {
                  "required": [
                    "source_amount"
                  ]
                }
              }
            ]
          }
        ],
        "$defs": {
          "source": {
            "type": "object",
            "required": [
              "sender_id",
              "segment"
            ],
            "dependentRequired": {
              "id_number": [
                "id_type"
              ]
            },
            "properties": {
              "sender_id": {
                "$ref": "#/$defs/sender_id"
              },
              "segment": {
                "$ref": "#/$defs/source_segment"
              },
              "legal_name_first": {
                "$ref": "#/$defs/source_legal_name_first"
              },
              "legal_name_last": {
                "$ref": "#/$defs/source_legal_name_last"
              },
              "company_name": {
                "$ref": "#/$defs/source_company_name"
              },
              "date_of_birth": {
                "$ref": "#/$defs/source_date_of_birth"
              },
              "id_type": {
                "$ref": "#/$defs/source_id_type"
              },
              "id_number": {
                "$ref": "#/$defs/source_id_number"
              }
            },
            "allOf": [
              {
                "type": "object",
                "required": [
                  "legal_name_first",
                  "legal_name_last"
                ]
              }
            ]
          },
          "destination": {
            "type": "object",
            "required": [
              "country"
            ],
            "properties": {
              "country": {
                "$ref": "#/$defs/destination_country"
              },
              "partner": {
                "$ref": "#/$defs/destination_partner"
              }
            }
          },
          "compliance": {
            "type": "object",
            "required": [
              "source_of_funds"
            ],
            "properties": {
              "source_of_funds": {
                "$ref": "#/$defs/source_of_funds"
              }
            }
          },
          "source_amount": {
            "type": "object",
            "required": [
              "units",
              "currency"
            ],
            "properties": {
              "units": {
                "$ref": "#/$defs/source_units"
              },
              "currency": {
                "$ref": "#/$defs/source_currency"
              }
            }
          },
          "destination_amount": {
            "type": "object",
            "properties": {
              "units": {
                "$ref": "#/$defs/destination_units"
              }
            }
          },
          "destination_units": {
            "type": "string",
            "pattern": "^[+-]?\\d*(([,.]\\d{3})+)?([,.]\\d+)?([eE][+-]?\\d+)?$"
          },
          "source_units": {
            "type": "string",
            "pattern": "^[+-]?\\d*(([,.]\\d{3})+)?([,.]\\d+)?([eE][+-]?\\d+)?$"
          },
          "source_currency": {
            "type": "string"
          },
          "source_of_funds": {
            "type": "string"
          },
          "destination_country": {
            "type": "string"
          },
          "destination_partner": {
            "type": "string"
          },
          "sender_id": {
            "type": "string"
          },
          "source_segment": {
            "type": "string",
            "enum": [
              "individual",
              "business"
            ]
          },
          "source_legal_name_first": {
            "type": "string"
          },
          "source_legal_name_last": {
            "type": "string"
          },
          "source_company_name": {
            "type": "string"
          },
          "source_date_of_birth": {
            "type": "string",
            "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})$"
          },
          "source_id_type": {
            "type": "string",
            "enum": [
              "national",
              "passport"
            ]
          },
          "source_id_number": {
            "type": "string"
          }
        }
      }
      """

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="validation_api.smoke_test.Smoke tests for Validation APIs" name="Able to search validation schema rule with payload field for C2C transfer" status="passed" time="0.799685"><system-out>
<![CDATA[
@scenario.begin

  @validation_api @smoke @search @test2
  Scenario: Able to search validation schema rule with payload field for C2C transfer
    Given call Login API with partner username as "<partner_user_name>" and password as "<partner_password>" ... passed in 0.401s
    When call Search Schema API to search schema "create_transfer" with following payload ... passed in 0.395s
      """
      {
        "partner": "C2C_Partner",
        "payload": {
                  "source":{
                          "segment": "Individual"
                  },
                  "destination":{
                           "segment": "Individual",
                           "country": "SGP"
                  }
        }
      }
      """
    Then the response status code will be "200" ... passed in 0.000s
    And the response data will be ... passed in 0.003s
      """
      {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$defs": {
              "destination_amount": {
                  "type": "object",
                  "properties": {
                      "units": {
                          "$ref": "#/$defs/destination_units"
                      },
                      "currency": {
                          "$ref": "#/$defs/destination_currency"
                      }
                  },
                  "required": [
                      "units",
                      "currency"
                  ]
              },
              "destination_currency": {
                  "type": "string"
              },
              "destination_units": {
                  "type": "string",
                  "pattern": "^[+-]?\\d*(([,.]\\d{3})+)?([,.]\\d+)?([eE][+-]?\\d+)?$"
              },
              "source_amount": {
                  "type": "object",
                  "properties": {
                      "units": {
                          "$ref": "#/$defs/source_units"
                      },
                      "currency": {
                          "$ref": "#/$defs/source_currency"
                      }
                  },
                  "required": [
                      "units",
                      "currency"
                  ]
              },
              "source_currency": {
                  "type": "string"
              },
              "source_units": {
                  "type": "string",
                  "pattern": "^[+-]?\\d*(([,.]\\d{3})+)?([,.]\\d+)?([eE][+-]?\\d+)?$"
              },
              "source": {
                  "type": "object",
                  "properties": {
                      "sender_id": {
                          "$ref": "#/$defs/sender_id"
                      },
                      "segment": {
                          "$ref": "#/$defs/source_segment"
                      },
                      "legal_name_first": {
                          "$ref": "#/$defs/source_legal_name_first"
                      },
                      "legal_name_last": {
                          "$ref": "#/$defs/source_legal_name_last"
                      },
                      "company_name": {
                          "$ref": "#/$defs/source_company_name"
                      },
                      "date_of_birth": {
                          "$ref": "#/$defs/source_date_of_birth"
                      },
                      "id_type": {
                          "$ref": "#/$defs/source_id_type"
                      },
                      "id_number": {
                          "$ref": "#/$defs/source_id_number"
                      }
                  },
                  "required": [
                      "sender_id",
                      "segment",
                      "legal_name_first",
                      "legal_name_last"
                  ],
                  "dependentRequired": {
                      "id_number": [
                          "id_type"
                      ]
                  }
              },
              "source_id_number": {
                  "type": "string"
              },
              "source_id_type": {
                  "type": "string",
                  "enum": [
                      "national",
                      "passport"
                  ]
              },
              "source_date_of_birth": {
                  "type": "string",
                  "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})$"
              },
              "source_company_name": {
                  "type": "string"
              },
              "source_legal_name_last": {
                  "type": "string"
              },
              "source_legal_name_first": {
                  "type": "string"
              },
              "source_segment": {
                  "type": "string",
                  "enum": [
                      "individual",
                      "business"
                  ]
              },
              "sender_id": {
                  "type": "string"
              }
          },
          "type": "object",
          "properties": {
              "source": {
                  "$ref": "#/$defs/source"
              },
              "source_amount": {
                  "$ref": "#/$defs/source_amount"
              },
              "destination_amount": {
                  "$ref": "#/$defs/destination_amount"
              }
          },
          "required": [
              "source"
          ],
          "anyOf": [
              {
                  "required": [
                      "source_amount"
                  ],
                  "not": {
                      "required": [
                          "destination_amount"
                      ]
                  }
              },
              {
                  "required": [
                      "destination_amount"
                  ],
                  "not": {
                      "required": [
                          "source_amount"
                      ]
                  }
              }
          ]
      }
      """

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>